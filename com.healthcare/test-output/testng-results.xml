<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="7" ignored="9" total="43" passed="26" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-26T09:39:16 AEST" name="CrossBrowserTestSuite" finished-at="2023-08-26T09:50:42 AEST" duration-ms="686349">
    <groups>
      <group name="group2">
        <method signature="FindAPatientTestClass.verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.FindAPatientTestClass@517566b]" name="verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable" class="com.healthcare.executepageclasses.FindAPatientTestClass"/>
        <method signature="LoginPageTestClass.verifySuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" name="verifySuccessfulLogin" class="com.healthcare.executepageclasses.LoginPageTestClass"/>
        <method signature="LoginPageTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" name="verifyUnsuccessfulLogin" class="com.healthcare.executepageclasses.LoginPageTestClass"/>
        <method signature="FindAPatientTestClass.verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.FindAPatientTestClass@49d3c823]" name="verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable" class="com.healthcare.executepageclasses.FindAPatientTestClass"/>
        <method signature="LoginPageTestClass.verifySuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" name="verifySuccessfulLogin" class="com.healthcare.executepageclasses.LoginPageTestClass"/>
        <method signature="LoginPageTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" name="verifyUnsuccessfulLogin" class="com.healthcare.executepageclasses.LoginPageTestClass"/>
      </group> <!-- group2 -->
      <group name="group1">
        <method signature="HomePageTestClass.verifyTheLogoIsDisplayedOrNotInHomePage(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@15dcfae7]" name="verifyTheLogoIsDisplayedOrNotInHomePage" class="com.healthcare.executepageclasses.HomePageTestClass"/>
        <method signature="LoginPageTestClass.verifyTheCorrectSiteIsLoadedWhileHittingTheURL()[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" name="verifyTheCorrectSiteIsLoadedWhileHittingTheURL" class="com.healthcare.executepageclasses.LoginPageTestClass"/>
        <method signature="HomePageTestClass.verifyTheLogoIsDisplayedOrNotInHomePage(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@604c5de8]" name="verifyTheLogoIsDisplayedOrNotInHomePage" class="com.healthcare.executepageclasses.HomePageTestClass"/>
        <method signature="LoginPageTestClass.verifyTheCorrectSiteIsLoadedWhileHittingTheURL()[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" name="verifyTheCorrectSiteIsLoadedWhileHittingTheURL" class="com.healthcare.executepageclasses.LoginPageTestClass"/>
      </group> <!-- group1 -->
    </groups>
    <test started-at="2023-08-26T09:39:16 AEST" name="ChromeTest" finished-at="2023-08-26T09:43:11 AEST" duration-ms="235543">
      <class name="com.healthcare.executepageclasses.HomePageTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@15dcfae7]" started-at="2023-08-26T09:42:55 AEST" name="beforeMethod" finished-at="2023-08-26T09:43:00 AEST" duration-ms="5549" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAllTilesAreDisplayedInHomePage(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@15dcfae7]" started-at="2023-08-26T09:43:00 AEST" name="verifyAllTilesAreDisplayedInHomePage" data-provider="dp" finished-at="2023-08-26T09:43:02 AEST" duration-ms="2115" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllTilesAreDisplayedInHomePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@15dcfae7]" started-at="2023-08-26T09:43:02 AEST" name="afterMethod" finished-at="2023-08-26T09:43:02 AEST" duration-ms="109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAllTilesAreDisplayedInHomePage status=SUCCESS method=HomePageTestClass.verifyAllTilesAreDisplayedInHomePage(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@15dcfae7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@15dcfae7]" started-at="2023-08-26T09:43:02 AEST" name="beforeMethod" finished-at="2023-08-26T09:43:09 AEST" duration-ms="6345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheLogoIsDisplayedOrNotInHomePage(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@15dcfae7]" started-at="2023-08-26T09:43:09 AEST" name="verifyTheLogoIsDisplayedOrNotInHomePage" data-provider="dp" finished-at="2023-08-26T09:43:11 AEST" duration-ms="2650" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLogoIsDisplayedOrNotInHomePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@15dcfae7]" started-at="2023-08-26T09:43:11 AEST" name="afterMethod" finished-at="2023-08-26T09:43:11 AEST" duration-ms="110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLogoIsDisplayedOrNotInHomePage status=SUCCESS method=HomePageTestClass.verifyTheLogoIsDisplayedOrNotInHomePage(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@15dcfae7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.healthcare.executepageclasses.HomePageTestClass -->
      <class name="com.healthcare.executepageclasses.LoginPageTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:24 AEST" name="beforeMethod" finished-at="2023-08-26T09:42:28 AEST" duration-ms="4084" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:28 AEST" name="verifySuccessfulLogin" data-provider="dp" finished-at="2023-08-26T09:42:30 AEST" duration-ms="2007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:30 AEST" name="afterMethod" finished-at="2023-08-26T09:42:30 AEST" duration-ms="111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfulLogin status=SUCCESS method=LoginPageTestClass.verifySuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:30 AEST" name="beforeMethod" finished-at="2023-08-26T09:42:36 AEST" duration-ms="5221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheCorrectSiteIsLoadedWhileHittingTheURL()[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:36 AEST" name="verifyTheCorrectSiteIsLoadedWhileHittingTheURL" finished-at="2023-08-26T09:42:36 AEST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheCorrectSiteIsLoadedWhileHittingTheURL -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:36 AEST" name="afterMethod" finished-at="2023-08-26T09:42:36 AEST" duration-ms="110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheCorrectSiteIsLoadedWhileHittingTheURL status=SUCCESS method=LoginPageTestClass.verifyTheCorrectSiteIsLoadedWhileHittingTheURL()[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:36 AEST" name="beforeMethod" finished-at="2023-08-26T09:42:40 AEST" duration-ms="4355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:40 AEST" name="verifyUnsuccessfulLogin" data-provider="unsucessfulLogin" finished-at="2023-08-26T09:42:41 AEST" duration-ms="1414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:41 AEST" name="afterMethod" finished-at="2023-08-26T09:42:42 AEST" duration-ms="104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginPageTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:42 AEST" name="beforeMethod" finished-at="2023-08-26T09:42:47 AEST" duration-ms="5122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:47 AEST" name="verifyUnsuccessfulLogin" data-provider="unsucessfulLogin" finished-at="2023-08-26T09:42:48 AEST" duration-ms="1136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:48 AEST" name="afterMethod" finished-at="2023-08-26T09:42:48 AEST" duration-ms="106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginPageTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:48 AEST" name="beforeMethod" finished-at="2023-08-26T09:42:53 AEST" duration-ms="4823" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:53 AEST" name="verifyUnsuccessfulLogin" data-provider="unsucessfulLogin" finished-at="2023-08-26T09:42:54 AEST" duration-ms="1711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0]" started-at="2023-08-26T09:42:54 AEST" name="afterMethod" finished-at="2023-08-26T09:42:55 AEST" duration-ms="110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginPageTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@687ef2e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.healthcare.executepageclasses.LoginPageTestClass -->
      <class name="com.healthcare.executepageclasses.RegisterAPatientTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@737a135b]" started-at="2023-08-26T09:41:24 AEST" name="beforeMethod" finished-at="2023-08-26T09:41:28 AEST" duration-ms="4321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyToRegisterAPatient(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@737a135b]" started-at="2023-08-26T09:41:28 AEST" name="verifyToRegisterAPatient" data-provider="dp" finished-at="2023-08-26T09:41:41 AEST" duration-ms="12869" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyToRegisterAPatient -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@737a135b]" started-at="2023-08-26T09:41:41 AEST" name="afterMethod" finished-at="2023-08-26T09:41:41 AEST" duration-ms="126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyToRegisterAPatient status=SUCCESS method=RegisterAPatientTestClass.verifyToRegisterAPatient(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@737a135b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@737a135b]" started-at="2023-08-26T09:41:41 AEST" name="beforeMethod" finished-at="2023-08-26T09:41:45 AEST" duration-ms="4027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyToDeleteARegisteredPatient(java.lang.String,java.lang.String)[pri:1, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@737a135b]" started-at="2023-08-26T09:41:45 AEST" name="verifyToDeleteARegisteredPatient" data-provider="dp" finished-at="2023-08-26T09:42:01 AEST" duration-ms="15881" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyToDeleteARegisteredPatient -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@737a135b]" started-at="2023-08-26T09:42:01 AEST" name="afterMethod" finished-at="2023-08-26T09:42:01 AEST" duration-ms="110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyToDeleteARegisteredPatient status=SUCCESS method=RegisterAPatientTestClass.verifyToDeleteARegisteredPatient(java.lang.String,java.lang.String)[pri:1, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@737a135b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@737a135b]" started-at="2023-08-26T09:42:01 AEST" name="beforeMethod" finished-at="2023-08-26T09:42:05 AEST" duration-ms="3991" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable(java.lang.String,java.lang.String)[pri:2, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@737a135b]" started-at="2023-08-26T09:42:05 AEST" name="verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable" data-provider="dp" finished-at="2023-08-26T09:42:24 AEST" duration-ms="19084" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@737a135b]" started-at="2023-08-26T09:42:24 AEST" name="afterMethod" finished-at="2023-08-26T09:42:24 AEST" duration-ms="107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable status=SUCCESS method=RegisterAPatientTestClass.verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable(java.lang.String,java.lang.String)[pri:2, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@737a135b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.healthcare.executepageclasses.RegisterAPatientTestClass -->
      <class name="com.healthcare.executepageclasses.FindAPatientTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.FindAPatientTestClass@517566b]" started-at="2023-08-26T09:39:16 AEST" name="beforeMethod" finished-at="2023-08-26T09:39:21 AEST" duration-ms="4597" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.FindAPatientTestClass@517566b]" started-at="2023-08-26T09:39:21 AEST" name="verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable" data-provider="dp" finished-at="2023-08-26T09:39:36 AEST" duration-ms="14728" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.FindAPatientTestClass@517566b]" started-at="2023-08-26T09:39:36 AEST" name="afterMethod" finished-at="2023-08-26T09:39:36 AEST" duration-ms="112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable status=SUCCESS method=FindAPatientTestClass.verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.FindAPatientTestClass@517566b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.healthcare.executepageclasses.FindAPatientTestClass -->
      <class name="com.healthcare.executepageclasses.ActiveVisitsTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635]" started-at="2023-08-26T09:39:36 AEST" name="beforeMethod" finished-at="2023-08-26T09:39:40 AEST" duration-ms="3987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThePatientIsInActiveVisitsWhenVisitStarts(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635]" started-at="2023-08-26T09:39:40 AEST" name="verifyThePatientIsInActiveVisitsWhenVisitStarts" data-provider="dp" finished-at="2023-08-26T09:39:55 AEST" duration-ms="15745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePatientIsInActiveVisitsWhenVisitStarts -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635]" started-at="2023-08-26T09:39:56 AEST" name="afterMethod" finished-at="2023-08-26T09:39:56 AEST" duration-ms="115" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePatientIsInActiveVisitsWhenVisitStarts status=SUCCESS method=ActiveVisitsTestClass.verifyThePatientIsInActiveVisitsWhenVisitStarts(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635]" started-at="2023-08-26T09:39:56 AEST" name="beforeMethod" finished-at="2023-08-26T09:40:00 AEST" duration-ms="4040" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635]" started-at="2023-08-26T09:40:00 AEST" name="verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted" data-provider="dp" finished-at="2023-08-26T09:40:32 AEST" duration-ms="32588" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at com.healthcare.pageclasses.HomePageClass.clickOnActiveVisitsTile(HomePageClass.java:58)
at com.healthcare.executepageclasses.ActiveVisitsTestClass.verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted(ActiveVisitsTestClass.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[contains(@href,'/openmrs/coreapps/activeVisits.page')]"}
  (Session info: chrome=116.0.5845.110)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '13.3.1', java.version: '11.0.17'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [579ee6605fc6bba5ab169e88f48d5600, findElement {using=xpath, value=//a[contains(@href,'/openmrs/coreapps/activeVisits.page')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.110, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: /var/folders/vp/snvd374s0xv...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62179}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://localhost:62179/devtoo..., se:cdpVersion: 116.0.5845.110, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 579ee6605fc6bba5ab169e88f48d5600
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy20.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:37)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:205)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635]" started-at="2023-08-26T09:40:32 AEST" name="afterMethod" finished-at="2023-08-26T09:40:32 AEST" duration-ms="110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted status=SKIP method=ActiveVisitsTestClass.verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635]" started-at="2023-08-26T09:40:32 AEST" name="beforeMethod" finished-at="2023-08-26T09:40:37 AEST" duration-ms="4413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635]" started-at="2023-08-26T09:40:37 AEST" name="verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted" data-provider="dp" finished-at="2023-08-26T09:41:10 AEST" duration-ms="32744" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at com.healthcare.pageclasses.HomePageClass.clickOnActiveVisitsTile(HomePageClass.java:58)
at com.healthcare.executepageclasses.ActiveVisitsTestClass.verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted(ActiveVisitsTestClass.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:263)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[contains(@href,'/openmrs/coreapps/activeVisits.page')]"}
  (Session info: chrome=116.0.5845.110)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '13.3.1', java.version: '11.0.17'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9ebcea39e8546a756aa40b64e3668844, findElement {using=xpath, value=//a[contains(@href,'/openmrs/coreapps/activeVisits.page')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.110, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: /var/folders/vp/snvd374s0xv...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:62369}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://localhost:62369/devtoo..., se:cdpVersion: 116.0.5845.110, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9ebcea39e8546a756aa40b64e3668844
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy20.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:37)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:205)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635]" started-at="2023-08-26T09:41:10 AEST" name="afterMethod" finished-at="2023-08-26T09:41:10 AEST" duration-ms="111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted status=SKIP method=ActiveVisitsTestClass.verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635]" started-at="2023-08-26T09:41:10 AEST" name="beforeMethod" finished-at="2023-08-26T09:41:14 AEST" duration-ms="4319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635]" started-at="2023-08-26T09:41:14 AEST" name="verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted" data-provider="dp" finished-at="2023-08-26T09:41:23 AEST" duration-ms="9499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635]" started-at="2023-08-26T09:41:23 AEST" name="afterMethod" finished-at="2023-08-26T09:41:24 AEST" duration-ms="105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted status=SUCCESS method=ActiveVisitsTestClass.verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@2654635] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.healthcare.executepageclasses.ActiveVisitsTestClass -->
    </test> <!-- ChromeTest -->
    <test started-at="2023-08-26T09:43:12 AEST" name="FirefoxTest" finished-at="2023-08-26T09:50:42 AEST" duration-ms="450472">
      <class name="com.healthcare.executepageclasses.CaptureVitalsTestClass">
        <test-method is-config="true" signature="createExtendReport(org.testng.ITestContext)[pri:0, instance:com.healthcare.executepageclasses.CaptureVitalsTestClass@ebaa6cb]" started-at="2023-08-26T09:39:16 AEST" name="createExtendReport" finished-at="2023-08-26T09:39:16 AEST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5c58cf11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtendReport -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.CaptureVitalsTestClass@ebaa6cb]" started-at="2023-08-26T09:43:12 AEST" name="beforeMethod" finished-at="2023-08-26T09:43:19 AEST" duration-ms="7066" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAllAddVitalDetailsOfRegisteredPatient(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.CaptureVitalsTestClass@ebaa6cb]" started-at="2023-08-26T09:43:19 AEST" name="verifyAllAddVitalDetailsOfRegisteredPatient" data-provider="dp" finished-at="2023-08-26T09:43:49 AEST" duration-ms="30219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllAddVitalDetailsOfRegisteredPatient -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.CaptureVitalsTestClass@ebaa6cb]" started-at="2023-08-26T09:43:49 AEST" name="afterMethod" finished-at="2023-08-26T09:43:50 AEST" duration-ms="542" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAllAddVitalDetailsOfRegisteredPatient status=SUCCESS method=CaptureVitalsTestClass.verifyAllAddVitalDetailsOfRegisteredPatient(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.CaptureVitalsTestClass@ebaa6cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.healthcare.executepageclasses.CaptureVitalsTestClass -->
      <class name="com.healthcare.executepageclasses.HomePageTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@604c5de8]" started-at="2023-08-26T09:50:24 AEST" name="beforeMethod" finished-at="2023-08-26T09:50:30 AEST" duration-ms="6134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyAllTilesAreDisplayedInHomePage(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@604c5de8]" started-at="2023-08-26T09:50:30 AEST" name="verifyAllTilesAreDisplayedInHomePage" data-provider="dp" finished-at="2023-08-26T09:50:33 AEST" duration-ms="2656" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllTilesAreDisplayedInHomePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@604c5de8]" started-at="2023-08-26T09:50:33 AEST" name="afterMethod" finished-at="2023-08-26T09:50:33 AEST" duration-ms="414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAllTilesAreDisplayedInHomePage status=SUCCESS method=HomePageTestClass.verifyAllTilesAreDisplayedInHomePage(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@604c5de8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@604c5de8]" started-at="2023-08-26T09:50:33 AEST" name="beforeMethod" finished-at="2023-08-26T09:50:39 AEST" duration-ms="5896" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheLogoIsDisplayedOrNotInHomePage(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@604c5de8]" started-at="2023-08-26T09:50:39 AEST" name="verifyTheLogoIsDisplayedOrNotInHomePage" data-provider="dp" finished-at="2023-08-26T09:50:42 AEST" duration-ms="2622" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLogoIsDisplayedOrNotInHomePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@604c5de8]" started-at="2023-08-26T09:50:42 AEST" name="afterMethod" finished-at="2023-08-26T09:50:42 AEST" duration-ms="422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLogoIsDisplayedOrNotInHomePage status=SUCCESS method=HomePageTestClass.verifyTheLogoIsDisplayedOrNotInHomePage(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.HomePageTestClass@604c5de8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.healthcare.executepageclasses.HomePageTestClass -->
      <class name="com.healthcare.executepageclasses.LoginPageTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:49:45 AEST" name="beforeMethod" finished-at="2023-08-26T09:49:51 AEST" duration-ms="6414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:49:51 AEST" name="verifySuccessfulLogin" data-provider="dp" finished-at="2023-08-26T09:49:54 AEST" duration-ms="2681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:49:54 AEST" name="afterMethod" finished-at="2023-08-26T09:49:54 AEST" duration-ms="424" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfulLogin status=SUCCESS method=LoginPageTestClass.verifySuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:49:54 AEST" name="beforeMethod" finished-at="2023-08-26T09:50:00 AEST" duration-ms="5879" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheCorrectSiteIsLoadedWhileHittingTheURL()[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:50:00 AEST" name="verifyTheCorrectSiteIsLoadedWhileHittingTheURL" finished-at="2023-08-26T09:50:00 AEST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheCorrectSiteIsLoadedWhileHittingTheURL -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:50:00 AEST" name="afterMethod" finished-at="2023-08-26T09:50:01 AEST" duration-ms="427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheCorrectSiteIsLoadedWhileHittingTheURL status=SUCCESS method=LoginPageTestClass.verifyTheCorrectSiteIsLoadedWhileHittingTheURL()[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:50:01 AEST" name="beforeMethod" finished-at="2023-08-26T09:50:07 AEST" duration-ms="5912" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:50:07 AEST" name="verifyUnsuccessfulLogin" data-provider="unsucessfulLogin" finished-at="2023-08-26T09:50:08 AEST" duration-ms="1467" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:50:08 AEST" name="afterMethod" finished-at="2023-08-26T09:50:08 AEST" duration-ms="436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginPageTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:50:08 AEST" name="beforeMethod" finished-at="2023-08-26T09:50:14 AEST" duration-ms="5963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:50:14 AEST" name="verifyUnsuccessfulLogin" data-provider="unsucessfulLogin" finished-at="2023-08-26T09:50:16 AEST" duration-ms="1217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:50:16 AEST" name="afterMethod" finished-at="2023-08-26T09:50:16 AEST" duration-ms="426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginPageTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:50:16 AEST" name="beforeMethod" finished-at="2023-08-26T09:50:22 AEST" duration-ms="5965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:50:22 AEST" name="verifyUnsuccessfulLogin" data-provider="unsucessfulLogin" finished-at="2023-08-26T09:50:24 AEST" duration-ms="1659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85]" started-at="2023-08-26T09:50:24 AEST" name="afterMethod" finished-at="2023-08-26T09:50:24 AEST" duration-ms="425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=SUCCESS method=LoginPageTestClass.verifyUnsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.LoginPageTestClass@5fe1ce85] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.healthcare.executepageclasses.LoginPageTestClass -->
      <class name="com.healthcare.executepageclasses.RegisterAPatientTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@436bc36]" started-at="2023-08-26T09:48:39 AEST" name="beforeMethod" finished-at="2023-08-26T09:48:45 AEST" duration-ms="5898" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyToRegisterAPatient(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@436bc36]" started-at="2023-08-26T09:48:45 AEST" name="verifyToRegisterAPatient" data-provider="dp" finished-at="2023-08-26T09:48:59 AEST" duration-ms="13964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyToRegisterAPatient -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@436bc36]" started-at="2023-08-26T09:48:59 AEST" name="afterMethod" finished-at="2023-08-26T09:49:00 AEST" duration-ms="428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyToRegisterAPatient status=SUCCESS method=RegisterAPatientTestClass.verifyToRegisterAPatient(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@436bc36] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@436bc36]" started-at="2023-08-26T09:49:00 AEST" name="beforeMethod" finished-at="2023-08-26T09:49:06 AEST" duration-ms="6472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyToDeleteARegisteredPatient(java.lang.String,java.lang.String)[pri:1, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@436bc36]" started-at="2023-08-26T09:49:06 AEST" name="verifyToDeleteARegisteredPatient" data-provider="dp" finished-at="2023-08-26T09:49:24 AEST" duration-ms="17942" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyToDeleteARegisteredPatient -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@436bc36]" started-at="2023-08-26T09:49:24 AEST" name="afterMethod" finished-at="2023-08-26T09:49:25 AEST" duration-ms="428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyToDeleteARegisteredPatient status=SUCCESS method=RegisterAPatientTestClass.verifyToDeleteARegisteredPatient(java.lang.String,java.lang.String)[pri:1, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@436bc36] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@436bc36]" started-at="2023-08-26T09:49:25 AEST" name="beforeMethod" finished-at="2023-08-26T09:49:30 AEST" duration-ms="5877" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable(java.lang.String,java.lang.String)[pri:2, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@436bc36]" started-at="2023-08-26T09:49:30 AEST" name="verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable" data-provider="dp" finished-at="2023-08-26T09:49:44 AEST" duration-ms="13979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@436bc36]" started-at="2023-08-26T09:49:44 AEST" name="afterMethod" finished-at="2023-08-26T09:49:45 AEST" duration-ms="419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable status=SUCCESS method=RegisterAPatientTestClass.verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable(java.lang.String,java.lang.String)[pri:2, instance:com.healthcare.executepageclasses.RegisterAPatientTestClass@436bc36] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.healthcare.executepageclasses.RegisterAPatientTestClass -->
      <class name="com.healthcare.executepageclasses.FindAPatientTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.FindAPatientTestClass@49d3c823]" started-at="2023-08-26T09:48:20 AEST" name="beforeMethod" finished-at="2023-08-26T09:48:26 AEST" duration-ms="6112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.FindAPatientTestClass@49d3c823]" started-at="2023-08-26T09:48:26 AEST" name="verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable" data-provider="dp" finished-at="2023-08-26T09:48:39 AEST" duration-ms="13262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.FindAPatientTestClass@49d3c823]" started-at="2023-08-26T09:48:39 AEST" name="afterMethod" finished-at="2023-08-26T09:48:39 AEST" duration-ms="424" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable status=SUCCESS method=FindAPatientTestClass.verifyTheRegisteredPatientIsFoundOrNotInPatientRecordTable(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.FindAPatientTestClass@49d3c823] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.healthcare.executepageclasses.FindAPatientTestClass -->
      <class name="com.healthcare.executepageclasses.ActiveVisitsTestClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:43:50 AEST" name="beforeMethod" finished-at="2023-08-26T09:43:56 AEST" duration-ms="6702" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verifyThePatientIsInActiveVisitsWhenVisitStarts(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:43:56 AEST" name="verifyThePatientIsInActiveVisitsWhenVisitStarts" data-provider="dp" finished-at="2023-08-26T09:44:33 AEST" duration-ms="36534" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at com.healthcare.pageclasses.HomePageClass.clickOnActiveVisitsTile(HomePageClass.java:58)
at com.healthcare.executepageclasses.ActiveVisitsTestClass.verifyThePatientIsInActiveVisitsWhenVisitStarts(ActiveVisitsTestClass.java:71)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '13.3.1', java.version: '11.0.17'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [86282296-62ee-4884-bee1-214d11dd9126, findElement {using=xpath, value=//a[contains(@href,'/openmrs/coreapps/activeVisits.page')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 116.0.3, moz:accessibilityChecks: false, moz:buildID: 20230815173142, moz:debuggerAddress: 127.0.0.1:40989, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 22.4.0, moz:processID: 51570, moz:profile: /var/folders/vp/snvd374s0xv..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://127.0.0.1:40989/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 86282296-62ee-4884-bee1-214d11dd9126
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy20.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:37)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:205)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePatientIsInActiveVisitsWhenVisitStarts -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:44:33 AEST" name="afterMethod" finished-at="2023-08-26T09:44:33 AEST" duration-ms="443" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePatientIsInActiveVisitsWhenVisitStarts status=SKIP method=ActiveVisitsTestClass.verifyThePatientIsInActiveVisitsWhenVisitStarts(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:44:33 AEST" name="beforeMethod" finished-at="2023-08-26T09:44:39 AEST" duration-ms="5657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verifyThePatientIsInActiveVisitsWhenVisitStarts(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:44:39 AEST" name="verifyThePatientIsInActiveVisitsWhenVisitStarts" data-provider="dp" finished-at="2023-08-26T09:45:13 AEST" duration-ms="33955" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at com.healthcare.pageclasses.HomePageClass.clickOnActiveVisitsTile(HomePageClass.java:58)
at com.healthcare.executepageclasses.ActiveVisitsTestClass.verifyThePatientIsInActiveVisitsWhenVisitStarts(ActiveVisitsTestClass.java:71)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:263)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '13.3.1', java.version: '11.0.17'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [fcdaa232-6509-4099-ab5b-7535d2da620e, findElement {using=xpath, value=//a[contains(@href,'/openmrs/coreapps/activeVisits.page')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 116.0.3, moz:accessibilityChecks: false, moz:buildID: 20230815173142, moz:debuggerAddress: 127.0.0.1:9704, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 22.4.0, moz:processID: 51651, moz:profile: /var/folders/vp/snvd374s0xv..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://127.0.0.1:9704/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: fcdaa232-6509-4099-ab5b-7535d2da620e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy20.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:37)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:205)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePatientIsInActiveVisitsWhenVisitStarts -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:45:13 AEST" name="afterMethod" finished-at="2023-08-26T09:45:13 AEST" duration-ms="521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePatientIsInActiveVisitsWhenVisitStarts status=SKIP method=ActiveVisitsTestClass.verifyThePatientIsInActiveVisitsWhenVisitStarts(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:45:14 AEST" name="beforeMethod" finished-at="2023-08-26T09:45:19 AEST" duration-ms="5929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verifyThePatientIsInActiveVisitsWhenVisitStarts(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:45:19 AEST" name="verifyThePatientIsInActiveVisitsWhenVisitStarts" data-provider="dp" finished-at="2023-08-26T09:45:55 AEST" duration-ms="35167" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at com.healthcare.pageclasses.HomePageClass.clickOnActiveVisitsTile(HomePageClass.java:58)
at com.healthcare.executepageclasses.ActiveVisitsTestClass.verifyThePatientIsInActiveVisitsWhenVisitStarts(ActiveVisitsTestClass.java:71)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:263)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '13.3.1', java.version: '11.0.17'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [5c087fd5-5d5f-440a-b29d-e6d539ccd3ec, findElement {using=xpath, value=//a[contains(@href,'/openmrs/coreapps/activeVisits.page')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 116.0.3, moz:accessibilityChecks: false, moz:buildID: 20230815173142, moz:debuggerAddress: 127.0.0.1:48858, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 22.4.0, moz:processID: 51702, moz:profile: /var/folders/vp/snvd374s0xv..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://127.0.0.1:48858/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 5c087fd5-5d5f-440a-b29d-e6d539ccd3ec
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy20.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:37)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:205)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePatientIsInActiveVisitsWhenVisitStarts -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:45:55 AEST" name="afterMethod" finished-at="2023-08-26T09:45:55 AEST" duration-ms="440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePatientIsInActiveVisitsWhenVisitStarts status=SKIP method=ActiveVisitsTestClass.verifyThePatientIsInActiveVisitsWhenVisitStarts(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:45:55 AEST" name="beforeMethod" finished-at="2023-08-26T09:46:02 AEST" duration-ms="6569" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verifyThePatientIsInActiveVisitsWhenVisitStarts(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:46:02 AEST" name="verifyThePatientIsInActiveVisitsWhenVisitStarts" data-provider="dp" finished-at="2023-08-26T09:46:37 AEST" duration-ms="34918" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at com.healthcare.pageclasses.HomePageClass.clickOnActiveVisitsTile(HomePageClass.java:58)
at com.healthcare.executepageclasses.ActiveVisitsTestClass.verifyThePatientIsInActiveVisitsWhenVisitStarts(ActiveVisitsTestClass.java:71)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:263)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '13.3.1', java.version: '11.0.17'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [11f1b5f3-8e81-4908-a10f-c73a552b34f9, findElement {using=xpath, value=//a[contains(@href,'/openmrs/coreapps/activeVisits.page')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 116.0.3, moz:accessibilityChecks: false, moz:buildID: 20230815173142, moz:debuggerAddress: 127.0.0.1:35936, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 22.4.0, moz:processID: 51770, moz:profile: /var/folders/vp/snvd374s0xv..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://127.0.0.1:35936/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 11f1b5f3-8e81-4908-a10f-c73a552b34f9
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy20.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:37)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:205)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePatientIsInActiveVisitsWhenVisitStarts -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:46:37 AEST" name="afterMethod" finished-at="2023-08-26T09:46:37 AEST" duration-ms="583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePatientIsInActiveVisitsWhenVisitStarts status=SKIP method=ActiveVisitsTestClass.verifyThePatientIsInActiveVisitsWhenVisitStarts(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:46:37 AEST" name="beforeMethod" finished-at="2023-08-26T09:46:43 AEST" duration-ms="5967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="verifyThePatientIsInActiveVisitsWhenVisitStarts(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:46:43 AEST" name="verifyThePatientIsInActiveVisitsWhenVisitStarts" data-provider="dp" finished-at="2023-08-26T09:47:19 AEST" duration-ms="35610" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at com.healthcare.pageclasses.HomePageClass.clickOnActiveVisitsTile(HomePageClass.java:58)
at com.healthcare.executepageclasses.ActiveVisitsTestClass.verifyThePatientIsInActiveVisitsWhenVisitStarts(ActiveVisitsTestClass.java:71)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:263)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '13.3.1', java.version: '11.0.17'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [46243dc9-57ca-4008-8f6e-e802c8dda927, findElement {using=xpath, value=//a[contains(@href,'/openmrs/coreapps/activeVisits.page')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 116.0.3, moz:accessibilityChecks: false, moz:buildID: 20230815173142, moz:debuggerAddress: 127.0.0.1:32126, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 22.4.0, moz:processID: 51846, moz:profile: /var/folders/vp/snvd374s0xv..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://127.0.0.1:32126/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 46243dc9-57ca-4008-8f6e-e802c8dda927
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy20.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:37)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:205)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePatientIsInActiveVisitsWhenVisitStarts -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:47:19 AEST" name="afterMethod" finished-at="2023-08-26T09:47:19 AEST" duration-ms="526" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePatientIsInActiveVisitsWhenVisitStarts status=SKIP method=ActiveVisitsTestClass.verifyThePatientIsInActiveVisitsWhenVisitStarts(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:47:19 AEST" name="beforeMethod" finished-at="2023-08-26T09:47:25 AEST" duration-ms="5947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThePatientIsInActiveVisitsWhenVisitStarts(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:47:25 AEST" name="verifyThePatientIsInActiveVisitsWhenVisitStarts" data-provider="dp" finished-at="2023-08-26T09:48:00 AEST" duration-ms="34994" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]' (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at com.healthcare.pageclasses.HomePageClass.clickOnActiveVisitsTile(HomePageClass.java:58)
at com.healthcare.executepageclasses.ActiveVisitsTestClass.verifyThePatientIsInActiveVisitsWhenVisitStarts(ActiveVisitsTestClass.java:71)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:263)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: //a[contains(@href,'/openmrs/coreapps/activeVisits.page')]
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '13.3.1', java.version: '11.0.17'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [06853dbf-0214-4101-8912-d7aed6d875f8, findElement {using=xpath, value=//a[contains(@href,'/openmrs/coreapps/activeVisits.page')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 116.0.3, moz:accessibilityChecks: false, moz:buildID: 20230815173142, moz:debuggerAddress: 127.0.0.1:20331, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 22.4.0, moz:processID: 51899, moz:profile: /var/folders/vp/snvd374s0xv..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://127.0.0.1:20331/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 06853dbf-0214-4101-8912-d7aed6d875f8
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy20.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:37)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:205)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePatientIsInActiveVisitsWhenVisitStarts -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:48:00 AEST" name="afterMethod" finished-at="2023-08-26T09:48:01 AEST" duration-ms="500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePatientIsInActiveVisitsWhenVisitStarts status=FAILURE method=ActiveVisitsTestClass.verifyThePatientIsInActiveVisitsWhenVisitStarts(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:48:01 AEST" name="beforeMethod" finished-at="2023-08-26T09:48:07 AEST" duration-ms="5875" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:48:07 AEST" name="verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted" data-provider="dp" finished-at="2023-08-26T09:48:19 AEST" duration-ms="12585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b]" started-at="2023-08-26T09:48:19 AEST" name="afterMethod" finished-at="2023-08-26T09:48:20 AEST" duration-ms="410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted status=SUCCESS method=ActiveVisitsTestClass.verifyThePatientIsNotDisplayedInActiveVisitsWhenVisitNotStarted(java.lang.String,java.lang.String)[pri:0, instance:com.healthcare.executepageclasses.ActiveVisitsTestClass@906d29b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.healthcare.executepageclasses.ActiveVisitsTestClass -->
    </test> <!-- FirefoxTest -->
  </suite> <!-- CrossBrowserTestSuite -->
</testng-results>
